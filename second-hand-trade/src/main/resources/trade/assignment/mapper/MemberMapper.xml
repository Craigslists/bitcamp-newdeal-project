<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="trade.assignment.repository.MemberRepository">
	
	    <!--프라이머리 키 = id 라고 지정해준다.  -->
    <resultMap type="member" id="memberMap">
         <id column="MNO" property="no"/>
         <result column="NAME" property="name"/>
         <result column="NICKNAME" property="nickname"/>
         <result column="EMAIL" property="email"/>
         <result column="PROFILEPHOTO" property="profilephoto"/>
         <result column="PHONENUMBER" property="phonenumber"/>
         <result column="PRILEVEL" property="prilevel"/>
         <result column="WEBSITE" property="website"/>
         <result column="INTRO" property="intro"/>
         <result column="PWD" property="password"/>
       </resultMap>
       
  <insert id="insert" parameterType="Member">
    insert into tbl_user(EMAIL,NAME,PWD) 
    
    values(#{email},#{name},password(#{password}))
  </insert>
 
 <select id="findByEmailAndPassword"
  parameterType="map"
  resultMap="memberMap">
    select 
    MNO,
    EMAIL, 
    NAME,
    PROFILEPHOTO
    from tbl_user
    where EMAIL=#{email} and PWD =password(#{password})
 </select>
 
  <select id="authenticate"   
	  parameterType="map"
	  resultMap="memberMap">
        SELECT
            MNO,
            EMAIL,
            PRILEVEL
        FROM tbl_user
        WHERE EMAIL = #{email}
    </select>
    
    <update id="createAuthKey">
        UPDATE tbl_user
        SET AUTHKEY = #{memberAuthKey}
        WHERE EMAIL = #{email}
    </update>
    
        <insert id="naverInsertUser">
        INSERT INTO tbl_user (EMAIL, SNSID, NAME)
        VALUES (#email}, #{snsID}, #{name})
    </insert>

    <select id="naverReadUser"   parameterType="map"
	  resultMap="memberMap">
        SELECT
            MNO,
            name    name,
            EMAIL   email,
            PROFILEPHOTO 
        FROM tbl_user
        WHERE SNSID = #{snsID}
    </select>

    
    	<!-- 특정 유저데이터 읽기 -->
	<select id="userRead" parameterType="map"
	  resultMap="memberMap">
        SELECT 
        MNO, 
        email, 
        name,
        nickname, 
         website, 
         profilephoto,
         phonenumber, 
         INTRO intro
		FROM
		tbl_user
		WHERE name=#{name}
       
	</select>
		<!-- 특정 유저데이터 읽기 -->
	<select id="read" parameterType="map"
	  resultMap="memberMap">
		SELECT *
		FROM
		tbl_user
		WHERE MNO=#{id}
	</select>
	
	   <!-- kgm userUpdate -->
    <update id="update" parameterType="member">
	    UPDATE tbl_user
	    SET
	        NICKNAME = #{nickname},
	        EMAIL = #{email},
	        WEBSITE = #{website},
            PHONENUMBER = #{phonenumber},
	        INTRO = #{intro}
	       	
	    WHERE
	        MNO = #{no}
    </update>

	 <select id="checkPassWord"
  parameterType="map"
  resultMap="memberMap">
    select MNO,EMAIL, NAME
    from tbl_user
    where MNO=#{id} and PWD =password(#{password})
 </select>
	
	
	    <!-- 비밀번호 변경 -->
<!--    	<update id="updatePassword">
        UPDATE tbl_user
        SET
            PWD =password(#{password})
        WHERE MNO = #{no}
    </update> -->
    
      <update id="updatePassword" parameterType="member">
    update tbl_user
    SET
       PWD =password(#{password})
    where 
        MNO = #{no} 
  </update>
    	<!-- 사용자가 인증키 확인시 -->
	<update id="successAuth">
        UPDATE tbl_user
        SET
            prilevel =1
        WHERE EMAIL = #{email}
    </update> 
        <!-- 인증키 업데이트 -->
    <update id="userAuth">
        UPDATE tbl_user
        SET
            PRILEVEL = 1
        where EMAIL = #{email}
    </update>
        <!-- 인증키 확인여부 -->
<!--     <select id="chkAuth" resultType="trade.assignment.domain.Member">
        SELECT
            MNO,
            NAME,
            EMAIL
        FROM tbl_user
        WHERE AUTHKEY = #{memberAuthKey}
    </select> -->

         	<!-- 프로필 사진 수정 -->
	<update id="updatePhoto">
		UPDATE tbl_user
	     SET
	      PROFILEPHOTO= #{profilephoto}
	    
		WHERE MNO=#{no}
	</update>
	
	
	

</mapper>



