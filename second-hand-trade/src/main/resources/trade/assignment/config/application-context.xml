<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
        

  <context:component-scan base-package="trade.assignment">
    <context:exclude-filter type="regex" 
                            expression="trade.assignment.web.*"/>
  </context:component-scan>


  <tx:annotation-driven transaction-manager="txManager"/>

  <tx:advice id="txAdvice" transaction-manager="txManager">
    <tx:attributes>
       <tx:method name="get*" read-only="true"/>
       <tx:method name="list*" read-only="true"/>
       <tx:method name="find*" read-only="true"/>
       <tx:method name="*"/>
    </tx:attributes>
  </tx:advice>
  

  <aop:config>

      <aop:pointcut id="serviceOperation" 
        expression="execution(* trade.assignment.service.*.*(..))"/>
      
  
      <aop:advisor advice-ref="txAdvice" 
        pointcut-ref="serviceOperation"/>
  </aop:config>

  <bean id="sqlSessionFactory"
        class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"/>  
    <property name="mapperLocations" 
              value="classpath*:trade/assignment/mapper/**/*.xml" />  
    <property name="typeAliasesPackage" 
              value="trade.assignment.domain"/>               
  </bean>

  <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driver}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
  </bean>
  
  	<!-- 메일 보내기 -->
   <bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
      <property name="host" value="smtp.gmail.com" />
      <property name="port" value="587" />
      <property name="username" value="${google.username}" />
      <property name="password" value="${google.password}" />
	

      <!-- email 요청시는 SMTP -->
      <property name="javaMailProperties">
         <props>
            <prop key="mail.transport.protocol">smtp</prop>
            <prop key="mail.smtp.auth">true</prop>
            <prop key="mail.smtp.starttls.enable">true</prop>
            <prop key="mail.debug">true</prop>
         </props>
      </property>
   </bean>
  
  <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource"/>
  </bean>
  
  <!-- 클라이언트ID와 보안비밀 세팅 -->
<bean id="googleConnectionFactory"
  class="org.springframework.social.google.connect.GoogleConnectionFactory">
  <constructor-arg
    value="34138722145-j8upnor2ujj5hmquiraaflo7au4uu1l3.apps.googleusercontent.com" />
  <constructor-arg value="PaD2YF9RmeH96TbdexDgI1XX" />
</bean>
<!-- 승인된 자바스크립트 원본과 승인된 리디렉션 URI -->
<bean id="googleOAuth2Parameters"
  class="org.springframework.social.oauth2.OAuth2Parameters">
  <property name="scope"
    value="https://www.googleapis.com/auth/plus.login" />
    
  <property name="redirectUri"
    value="http://localhost:8181/user/googleSignInCallback" />
</bean>
		

  <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
    <property name="basePackage" 
              value="trade.assignment.repository" />
  </bean>

  <context:property-placeholder 
      location="classpath:trade/assignment/config/jdbc.properties"/>

</beans>







